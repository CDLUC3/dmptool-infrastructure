AWSTemplateFormatVersion: '2010-09-09'

Description: 'S3 bucket to store logs (e.g. access logs for other S3 buckets)'

Parameters:
  S3LogsObjectLifeSpan:
    Type: 'Number'
    Default: 30

  # sqs queue must be available before trying to configure it here
  S3LogsEventNotificationQueueArn:
    Type: 'String'
    Default: ""

  S3CloudFrontVersioning:
    Type: 'String'
    Default: Enabled

  S3PrivateVersioning:
    Type: 'String'
    Default: Enabled

Conditions:
  # If sqs queue is not defined, do not configure log event notifications
  SetLogsEventNotifications: !Not
    - !Equals 
      - !Ref S3LogsEventNotificationQueueArn
      - ''

Resources:
  # S3 Bucket that stores S3 access logs and ALB logs
  S3LogsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    Properties:
      BucketName: !Sub "${AWS::StackName}-logs"
      AccessControl: 'Private'
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: !Ref S3LogsObjectLifeSpan
            Status: 'Enabled'
      NotificationConfiguration:
        !If
          - SetLogsEventNotifications
          - 
            QueueConfigurations: 
              - Event: s3:ObjectCreated:*
                Queue: !Ref S3LogsEventNotificationQueueArn
          - {}

  # S3 Bucket that stores WAF logs
  # Bucket name prefix must be 'aws-waf-logs-'
  S3WafLogsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    Properties:
      BucketName: !Sub "aws-waf-logs-${AWS::StackName}"
      AccessControl: 'Private'
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: !Ref S3LogsObjectLifeSpan
            Status: 'Enabled'
      NotificationConfiguration:
        !If
          - SetLogsEventNotifications
          - 
            QueueConfigurations: 
              - Event: s3:ObjectCreated:*
                Queue: !Ref S3LogsEventNotificationQueueArn
          - {}


  # S3 Bucket that stores assets for the DMP Tool UI (CDN)
  S3CloudFrontBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    Properties:
      BucketName: !Sub "${AWS::StackName}-cdn"
      AccessControl: 'Private'
      VersioningConfiguration:
        Status: !Ref S3CloudFrontVersioning
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogsBucket
        LogFilePrefix: 'cdn-access'

  # S3 Bucket to store private files (e.g. CodeBuild artifacts)
  S3PrivateBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    Properties:
      BucketName: !Sub "${AWS::StackName}-private"
      AccessControl: 'Private'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogsBucket
        LogFilePrefix: 'private-access'
      VersioningConfiguration:
        Status: !Ref S3PrivateVersioning

  # S3 Bucket that stores assets for the DMP Tool related works matching
  S3RelatedWorksBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    Properties:
      BucketName: !Sub "${AWS::StackName}-related-works"
      AccessControl: 'Private'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

Outputs:
  S3LogsBucketID:
    Value: !Ref S3LogsBucket

  S3LogsBucketURI:
    Value: !Sub "s3://${S3LogsBucket}"

  S3LogsBucketARN:
    Value: !GetAtt S3LogsBucket.Arn

  S3WafLogsBucketID:
    Value: !Ref S3WafLogsBucket

  S3WafLogsBucketURI:
    Value: !Sub "s3://${S3WafLogsBucket}"

  S3WafLogsBucketARN:
    Value: !GetAtt S3WafLogsBucket.Arn

  S3CloudFrontBucketID:
    Value: !Ref S3CloudFrontBucket

  S3CloudFrontBucketURI:
    Value: !Sub "s3://${S3CloudFrontBucket}"

  S3CloudFrontBucketARN:
    Value: !GetAtt S3CloudFrontBucket.Arn

  S3PrivateBucketID:
    Value: !Ref S3PrivateBucket

  S3PrivateBucketURI:
    Value: !Sub "s3://${S3PrivateBucket}"

  S3PrivateBucketARN:
    Value: !GetAtt S3PrivateBucket.Arn

  S3RelatedWorksBucketID:
    Value: !Ref S3RelatedWorksBucket

  S3RelatedWorksBucketURI:
    Value: !Sub "s3://${S3RelatedWorksBucket}"

  S3RelatedWorksBucketARN:
    Value: !GetAtt S3RelatedWorksBucket.Arn
